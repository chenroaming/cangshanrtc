var mUrl, mAppKey, mApi, mAppSecret, mSeq, callBack, interval, intervalCount = 0;//百度

var mUrl,_engine_type,_aue,_audio, mSeq,callBackDo, callBack, interval, intervalCount = 0;

function setAuthorization(e, t, a, r, n) {
	mUrl = e, mAppKey = t, mApi = a, mAppSecret = r, mSeq = n
}
//讯飞
function setAuthorization(e, t, a) {
	mUrl = e, _engine_type = t, _aue = a
}
function setCallBackFromServerResult(e) {
	callBack = e
}
//回调继续录音
function setCallBackDoRecord(e) {
	callBackDo = e
}
function uploadSpeexData(e) {
	var t = (e[0], (new Date).getTime()),
		a = mAppSecret + "api=" + mApi + "appkey=" + mAppKey + "timestamp=" + t + mAppSecret,
		r = $.md5(a),
		n = mUrl + "?appkey=" + mAppKey + "&api=" + mApi + "&timestamp=" + t + "&sign=" + r + "&seq=" + mSeq + "&compress=1";
	
	if (window.FileReader) {
				var i = new FileReader;
		i.readAsArrayBuffer(e), i.onloadend = function() {
			var e = new Uint8Array(this.result),
				t = e.subarray(0),
				a = new Int16Array(t.buffer);
				callBackDo(e);//取得本次录音数据后激发继续录音回调
//				r = new Speex({
//					quality: 10,//质量0～10，2.36KHz～24.6KHz
//					mode: 1,
//					bits_size: 70
//				}),
//				i = r.encode(a, !0),//				l = new Blob(a),

//				s = new FileReader;
//			s.readAsDataURL(l), s.onloadend = function() {
				$.ajax({
					url: "http://localhost:8080/ZhUp/xfVioce",
					data: a,
					type: "POST",
					dataType: "text",
					processData: !1,
					headers: {
						"Content-Type": "application/octet-stream"
					},
					xhrFields: {
						withCredentials: !0
					},
					success: function(e) {
						//interval = setInterval(getServerResult, 500, n)
						if(e){
							result = e,callBack(e), intervalCount = 0, clearInterval(interval);
						}
						
					},
					error: function(e) {}
				})
					
//			}
		}
		
		
//		var i = new FileReader;
//		i.readAsArrayBuffer(e), i.onloadend = function() {
//		//	var e = new Uint8Array(this.result),
////			var _iat = webiat("5ac449c8","c0354245d77a8c97bdcb50b8d95d23ae");
////			var e=_iat.toBuffer(this.result);
////			_iat.VoiceToTxt(e);
//  $.ajax({    
//			url: '/voice',
//			type: 'post',
//			data:this.result,
//			dataType:"application/octet-stream", 
//			cache: false,
//			success: function (result) {
//			if (result) 
//			{      
//    				console.log(result);
//			}    
//			}   
//		});
//
//		}
	}
}
//function getServerResult(e) {
//	var t = e + "&stop=1";
//	$.ajax({
//		url: t,
//		type: "GET",
//		dataType: "json",
//		async: !1,
//		xhrFields: {
//			withCredentials: !0
//		},
//		success: function(e) {
//			result = e, intervalCount++, (result.data && result.data.asr && result.data.asr["final"] || intervalCount > 20) && (clearInterval(interval), callBack(JSON.stringify(result)), intervalCount = 0, clearInterval(interval))
//		},
//		error: function(e) {
//			callBack(JSON.stringify(e)), intervalCount = 0, clearInterval(interval)
//		}
//	})
//}
